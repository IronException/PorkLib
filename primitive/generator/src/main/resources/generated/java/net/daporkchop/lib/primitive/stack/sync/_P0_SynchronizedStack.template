_headers_

import net.daporkchop.lib.primitive.util.Synchronized;

/**
 * A {@link _P0_Stack} that provides synchronized access to a delegate instance.
 *
 * @author DaPorkchop_
 */
public class _P0_SynchronizedStack_gH_ implements _P0_Stack_gH_, Synchronized<_P0_Stack_gH_> {
    protected final _P0_Stack_gH_ delegate;
    protected final Object mutex;

    public _P0_SynchronizedStack(_P0_Stack_gH_ delegate, Object mutex) {
        if (delegate == null)   {
            throw new NullPointerException("delegate");
        } else if (mutex == null)   {
            throw new NullPointerException("mutex");
        } else {
            this.delegate = delegate;
            this.mutex = mutex;
        }
    }

    @Override
    public void push(_p0_ val) throws StackOverflowException    {
        synchronized (this.mutex)   {
            this.delegate.push(val);
        }
    }

    @Override
    public _p0_ pop() throws StackUnderflowException    {
        synchronized (this.mutex)   {
            return this.delegate.pop();
        }
    }

    @Override
    public _P0_Stack_gH_ sync(Object mutex) {
        return this;
    }
}