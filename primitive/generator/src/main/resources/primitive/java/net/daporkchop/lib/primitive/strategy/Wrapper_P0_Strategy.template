$$$settings$$$
{
     "genericNames": {
         "P0": "T"
     }
}
_headers_

/**
 * A wrapper implementation of {@link _P0_Strategy}, used by {@link _P0_Strategy#strategy(_P0_EqualsStrategy, _P0_HashStrategy)}.
 *
 * @author DaPorkchop_
 */
final class Wrapper_P0_Strategy_gH_ implements _P0_Strategy_gH_ {
    private final _P0_EqualsStrategy_gH_ equals;
    private final _P0_HashStrategy_gH_ hash;

    public Wrapper_P0_Strategy(_P0_EqualsStrategy_gH_ equals, _P0_HashStrategy_gH_ hash)    {
        if (equals == null) {
            throw new NullPointerException("equals");
        } else if (hash == null)    {
            throw new NullPointerException("hash");
        } else {
            this.equals = equals;
            this.hash = hash;
        }
    }

    @Override
    public boolean equals(_p0_ a, _p0_ b)   {
        return this.equals.equals(a, b);
    }

    @Override
    public long hash(_p0_ val)  {
        return this.hash.hash(val);
    }

    @Override
    public int hashInt(_p0_ val)  {
        return this.hash.hashInt(val);
    }
}
