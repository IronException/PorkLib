$$$settings$$$
{
     "genericNames": {
         "P0": "E"
     }
}
_headers_

import net.daporkchop.lib.math.primitive.BinMath;

import net.daporkchop.lib.primitive.lambda.consumer._P0_Consumer;
import net.daporkchop.lib.primitive.list._P0_List;
import net.daporkchop.lib.primitive.list._P0_Listerator;
import net.daporkchop.lib.primitive.util.Synchronized;

/**
 * A {@link _P0_List} that provides synchronized access to a delegate instance.
 *
 * @author DaPorkchop_
 */
public final class _P0_SynchronizedList_gH_ implements _P0_List_gH_, Synchronized<_P0_List_gH_> {
    private final _P0_List_gH_ delegate;
    private final Object mutex;

    public _P0_SynchronizedList(_P0_List_gH_ delegate, Object mutex) {
        if (delegate == null)   {
            throw new NullPointerException("delegate");
        } else if (mutex == null)   {
            throw new NullPointerException("mutex");
        } else {
            this.delegate = delegate;
            this.mutex = mutex;
        }
    }

    @Override
    public boolean add(_p0_ val)   {
        synchronized (this.mutex)   {
            return this.delegate.add(val);
        }
    }

    @Override
    public void add(int i, _p0_ val) throws IndexOutOfBoundsException   {
        synchronized (this.mutex)   {
            this.delegate.add(i, val);
        }
    }

    @Override
    public boolean remove(_p0_ val)    {
        synchronized (this.mutex)   {
            return this.delegate.remove(val);
        }
    }

    @Override
    public _p0_ removeAt(int i) throws IndexOutOfBoundsException   {
        synchronized (this.mutex)   {
            return this.delegate.removeAt(i);
        }
    }

    @Override
    public _p0_ get(int i) throws IndexOutOfBoundsException {
        synchronized (this.mutex)   {
            return this.delegate.get(i);
        }
    }

    @Override
    public _p0_ get(long i) throws IndexOutOfBoundsException {
        synchronized (this.mutex)   {
            return this.delegate.get(i);
        }
    }

    @Override
    public _p0_ set(int i, _p0_ val) throws IndexOutOfBoundsException  {
        synchronized (this.mutex)   {
            return this.delegate.set(i, val);
        }
    }

    @Override
    public int indexOf(_p0_ val){
        synchronized (this.mutex)   {
            return this.delegate.indexOf(val);
        }
    }

    @Override
    public void forEach(_P0_Consumer_gH_ consumer)  {
        synchronized (this.mutex)   {
            this.delegate.forEach(consumer);
        }
    }

    @Override
    public _P0_Listerator_gH_ iterator()    {
        synchronized (this.mutex)   {
            return this.delegate.iterator();
        }
    }

    @Override
    public int size()   {
        synchronized (this.mutex)   {
            return this.delegate.size();
        }
    }

    @Override
    public void clear() {
        synchronized (this.mutex)   {
            this.delegate.clear();
        }
    }

    @Override
    public void removeAll() {
        synchronized (this.mutex)   {
            this.delegate.removeAll();
        }
    }

    @Override
    public void release()   {
        synchronized (this.mutex)   {
            this.delegate.release();
        }
    }

    @Override
    public _P0_List_gH_ sync(Object mutex) {
        throw new UnsupportedOperationException();
    }
}
